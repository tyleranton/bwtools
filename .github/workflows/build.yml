name: build

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install system deps
        run: sudo apt-get update && sudo apt-get install -y pkg-config libssl-dev

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build (Linux)
        run: cargo build --release

      - name: Package Linux bundle
        run: |
          set -euxo pipefail
          mkdir -p dist/bwtools-linux
          cp target/release/bwtools dist/bwtools-linux/
          cp player_list.json dist/bwtools-linux/
          tar -czf dist/bwtools-linux.tar.gz -C dist bwtools-linux

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: bwtools-linux
          path: dist/bwtools-linux.tar.gz

  windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Build (Windows MSVC)
        run: cargo build --release

      - name: Package Windows bundle
        shell: pwsh
        run: |
          $dist = "dist/bwtools-windows"
          New-Item -ItemType Directory -Force -Path $dist | Out-Null
          Copy-Item "target/release/bwtools.exe" -Destination $dist -Force
          Copy-Item "player_list.json" -Destination $dist -Force
          Compress-Archive -Path "$dist/*" -DestinationPath "dist/bwtools-windows.zip" -Force

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: bwtools-windows
          path: dist/bwtools-windows.zip

  release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: [linux, windows]
    steps:
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: bwtools-linux
          path: dist

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: bwtools-windows
          path: dist

      - name: Create GitHub Release (tagged builds)
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/bwtools-linux.tar.gz
            dist/bwtools-windows.zip
